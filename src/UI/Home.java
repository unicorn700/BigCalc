/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.util.ArrayList;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author unicorn
 */
public class Home extends javax.swing.JFrame {
    
    private static final int ADD = 1;
    private static final int SUBSTRACT = 2;
    private static final int MULTIPLY = 3;
    private static final int POWER = 4;
    private static final int FACTORIAL = 5;
    
    
    private static ArrayList<String> operands = new ArrayList<>();
    private static int operation;
    private static boolean threadTracker = true;
    
    Thread th;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        
        try{

         for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
            UIManager.setLookAndFeel(info.getClassName());
            SwingUtilities.updateComponentTreeUI(this);
            break;
            }
           }

        } catch (Exception e) {
   System.out.println(e.getMessage());
}
        
        
        jTextArea1.setText("0");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setTabSize(0);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Operations"));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("-");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("*");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setText("^");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton5.setText("=");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setText("n!");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setText("CE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                .addContainerGap(573, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Info"));

        jLabel1.setText("Number of digits in Result:");

        jLabel2.setText("Calculation time Required:");

        jLabel3.setText("0");

        jLabel4.setText("0.0s");

        jLabel5.setText("Operation Performed:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addContainerGap())
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 837, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
       // System.out.println(substractLong("2", "10"));
        operands.add(jTextArea1.getText());
        calculateResult();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        operands.add(jTextArea1.getText());
        operation = ADD;
        jTextArea1.setText("0");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        operands.add(jTextArea1.getText());
        operation = SUBSTRACT;
        jTextArea1.setText("0");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        operands.add(jTextArea1.getText());
        operation = MULTIPLY;
        jTextArea1.setText("0");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        operands.add(jTextArea1.getText());
        operation = POWER;
        jTextArea1.setText("0");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        operands.add(jTextArea1.getText());
        operation = FACTORIAL;
        jTextArea1.setText("0");
        calculateResult();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        operation = 0;
        operands.clear();
        jTextArea1.setText("0");
        if((th != null) && th.isAlive())
        {
            th.interrupt();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private String multiplyLong(String operand1,String operand2)
    {
        char[] a = operand1.toCharArray();
        char[] b = operand2.toCharArray();
        
        int la = a.length;
        int lb = b.length; 
        
        char result[] = new char[la+lb];
        
        for(int i= 0;i<la+lb;i++)
        {
            result[i] = '0';
        }
        
        int i,j,k,carry;
        for(i = la-1;i >=0;i--) 
        {
            for(j = (lb -1),k=i+j+1,carry=0;j>=0;j--,k--)
            {
                int n = (a[i] - '0') * (b[j] - '0') + (result[k] - '0') + carry;
                carry = n / 10;
                result[k] = (char)((n % 10) + '0');     
            }
            result[k]+=carry;
        }
                
        String temp = new String(result);
        if(temp.charAt(0) == '0')
        {
            temp = temp.substring(1);
        }
        return temp;
    }

    private String powerLong(String base,String exponent)
    {
        int n = Integer.parseInt(exponent);
        String s = "1";
        
        jProgressBar1.setStringPainted(true);
        for(int i=0;i<n;i++)
        {
            jProgressBar1.setValue(i);
            jProgressBar1.setString(i+" / "+n);
            s = multiplyLong(base,s);
        }
        jProgressBar1.setString(n+"/"+n);
        jProgressBar1.setValue(n);
        
        return s;
        
    }
    
    private String factorialLong(String num)
    {
        
        int n = Integer.parseInt(num);
        String s = num;
        
        for(int i = n-1;i>0;i--)
        {
            String temp = Integer.toString(i);
            s = multiplyLong(s, temp);
        }
        
        return s;
    }

    private String addLong(String operand1,String operand2)
    {
        char[] a = operand1.toCharArray();
        char[] b = operand2.toCharArray();
        
        int la = a.length;
        int lb = b.length;
        
        if(lb > la)
        {
            return addLong(operand2, operand1);
        }

        
        char result[] = new char[la+1];
        
        if(operand1.equalsIgnoreCase("0"))
        {
            return operand2;
        }
        else if(operand2.equalsIgnoreCase("0"))
        {
            return operand1;
        }
        
        for(int i= 0;i<la+1;i++)
        {
            result[i] = '0';
        }
        
        int i,k,carry;
        k = la - lb;
        
        for(i = (lb -1),carry=0;i>=0;i--)
        {
            int n = (b[i] - '0') + (a[i+k] - '0') + carry;
            carry = n / 10;
            result[i+k+1] = (char)((n % 10) + '0');    
        }
        for(i=k-1;i>=0;i--)
        {
            int n = (a[i] - '0') + carry;
            carry = n /10;
            result[i+1] = (char)((n % 10) + '0');
        }
            
        result[0]+=carry;
                
        String temp = new String(result);
        if(temp.charAt(0) == '0')
        {
            temp = temp.substring(1);
        }
        return temp;
    }
    
    private String substractLong(String operand1,String operand2)
    {
        char[] a = operand1.toCharArray();
        char[] b = operand2.toCharArray();
        
        int la = a.length;
        int lb = b.length;
        
        if(lb > la)
        {
            return substractLong(operand2, operand1);
        }

        
        char result[] = new char[la];
        
        if(operand2.equalsIgnoreCase("0"))
        {
            return operand1;
        }
        
        for(int i= 0;i<la;i++) 
        {
            result[i] = '0';
        }
        
        int i,j,k,carry;
        k = la - lb;
        
        for(i = (lb -1),carry=0;i>=0;i--)
        {
            int n = (a[i+k] - '0') - (b[i] - '0') + carry;
            if(n < 0)
            {
                n = (a[i+k] - '0') + 10 - (b[i] - '0') + carry;
                carry = -1;
            }
            else
            {
                carry = 0;
            }

            result[i+k] = (char)(n + '0');              
        }
        for(i=k-1;i>=0;i--)
        {
            int n = (a[i] - '0') + carry;
            if(n < 0)
            {
                n = (a[i] - '0') + 10 + carry;
                carry = -1;
            }
            else 
            {
                carry = 0;
            }
            
            result[i] = (char)(n + '0');
        }
                
        String temp = new String(result);
        if(temp.charAt(0) == '0') 
        {
            temp = temp.substring(1);
        }
        return temp;
        
    }
    
    private class CalculateReults extends Thread
    {
        @Override
        public void run()
        {
            if((operands.isEmpty()) || (operation == 0)) 
            {
                return;
            }
        String temp;
        jTextArea1.setEditable(false);
        jButton5.setEnabled(false);
        long startTime = System.currentTimeMillis();
        switch(operation)
        {
            case ADD:
                temp = "0";
                for(int i=0;i<operands.size();i++)
                {
                    temp = addLong(operands.get(i), temp);
                }
                jTextArea1.setText(temp);
                break;
            case SUBSTRACT:
                jTextArea1.setText
                        (substractLong(operands.get(0), operands.get(1)));
                break;
            case MULTIPLY:
               jProgressBar1.setIndeterminate(true);
                temp = "1";
                for(int i=0;i<operands.size();i++)
                {
                    temp = multiplyLong(operands.get(i), temp);
                }
                jProgressBar1.setIndeterminate(false);
                jTextArea1.setText(temp);
                break;
            case POWER:
                calculateMaxIteration();
                jTextArea1.setText
                        (powerLong(operands.get(0), operands.get(1)));
                break;
            case FACTORIAL:
                jTextArea1.setText
                        (factorialLong(operands.get(0)));
                break;
        }
        long endTime = System.currentTimeMillis();
        displayStatus(jTextArea1.getText().length(), (endTime - startTime));
        jTextArea1.setEditable(true);
        jButton5.setEnabled(true);
        operands.clear();
        }
    }
    
    private void calculateResult()
    {
        th = new Thread(new CalculateReults());
        th.start();
    }
    
    private void displayStatus(long digits,double time)
    {
        String s = null;
        String t;
        String u = null;
        time = time / 1000;
        do
        {
            if(s == null) 
            {
                s = Long.toString(digits % 1000);
                digits = digits / 1000;
            }
            else 
            {
                s = Long.toString(digits % 100) + "," + s;
                digits = digits /100;
            }
            
        }while(digits > 0);
        
        if(time > 3600)
        {
            t = Double.toString(time/3600) + "h " + 
                    Double.toString((time/60) % 60) + "min " +
                    Double.toString(time % 60) + "s";
        }
        else if(time > 60)
        {
            t =Double.toString((time/60) % 60) + "min " +
                    Double.toString(time % 60) + "s";
        }
        else 
        {
            t = Double.toString(time % 60) + "s";
        }
       
        char[] op = {'+','-','*','^','!'};
        
        for(int i = 0;i<operands.size();i++)
        {
            if(u == null)
            {
                u = operands.get(i)+" "+op[operation-1]+" ";
            }
            else
            {
                u = u + operands.get(i)+" "+op[operation-1]+" ";
            }
        }
        u = u.substring(0, u.length()-3);
        jLabel3.setText(s);
        jLabel4.setText(t);
        jLabel6.setText(u);
        
    }
    
    private void calculateMaxIteration()
    {
        int max = 0;
       /* if(operation == MULTIPLY)
        {
            for(int i =0;i<operands.size();i++)
            {
                max *= (operands.get(i).length());
            }
        }
        */
        if(operation == POWER)
        {
            max = Integer.parseInt(operands.get(1));
        }
        
        jProgressBar1.setMaximum(max);
    }
}
